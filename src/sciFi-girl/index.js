import * as THREE from 'three'
import React, { Suspense, useRef } from 'react'
import { Canvas, useFrame } from '@react-three/fiber'
import { Html, Environment, useGLTF, ContactShadows, OrbitControls } from '@react-three/drei'

function Model(props) {
  const group = useRef()
  // Load model
//   const { nodes, materials } = useGLTF('/mac-draco.glb')
  const { nodes, materials } = useGLTF('/scifi-girl.glb')
  
  // Make it float
  useFrame((state) => {
    const t = state.clock.getElapsedTime()
    group.current.rotation.x = THREE.MathUtils.lerp(group.current.rotation.x, Math.cos(t / 2) / 20 + 0.25, 0.1)
    group.current.rotation.y = THREE.MathUtils.lerp(group.current.rotation.y, Math.sin(t / 4) / 20, 0.1)
    group.current.rotation.z = THREE.MathUtils.lerp(group.current.rotation.z, Math.sin(t / 8) / 20, 0.1)
    group.current.position.y = THREE.MathUtils.lerp(group.current.position.y, (-8 + Math.sin(t / 2)) / 2, 0.1)
  })
  // The jsx graph was auto-generated by: https://github.com/pmndrs/gltfjsx
  return (
    <group  ref={group} {...props} dispose={null}>
    <group rotation={[-Math.PI / 2, 0, -Math.PI / 2]} scale={0.4}>
      <mesh geometry={nodes.Object_2.geometry} material={materials.body} />
      <mesh geometry={nodes.Object_3.geometry} material={materials.cloth} />
      <mesh geometry={nodes.Object_4.geometry} material={materials.eyelash} />
      <mesh geometry={nodes.Object_5.geometry} material={materials.eyes_inner} />
      <mesh geometry={nodes.Object_6.geometry} material={materials.eyes_outer} />
      <mesh geometry={nodes.Object_7.geometry} material={materials.material} />
      <mesh geometry={nodes.Object_8.geometry} material={materials.material} />
      <mesh geometry={nodes.Object_9.geometry} material={materials.material} />
      <mesh geometry={nodes.Object_10.geometry} material={materials.material} />
      <mesh geometry={nodes.Object_11.geometry} material={materials.material} />
      <mesh geometry={nodes.Object_12.geometry} material={materials.material} />
      <mesh geometry={nodes.Object_13.geometry} material={materials.ground} />
      <mesh geometry={nodes.Object_14.geometry} material={materials.hair_inner} />
      <mesh geometry={nodes.Object_15.geometry} material={materials.hair_outer} />
      <mesh geometry={nodes.Object_16.geometry} material={materials.light} />
      <mesh geometry={nodes.Object_17.geometry} material={materials.ring} />
      <mesh geometry={nodes.Object_18.geometry} material={materials.tear} />
    </group>
  </group>
  )
}

export default function App() {
  return (
    <Canvas camera={{ position: [-5, 0, -15], fov: 55 }}>
      <pointLight position={[10, 10, 10]} intensity={1.5} />
      <Suspense fallback={null}>
        <group rotation={[0, Math.PI, 0]} position={[0, 1, 0]}>
          <Model />
        </group>
        <Environment preset="city" />
      </Suspense>
      <ContactShadows position={[0, -4.5, 0]} scale={20} blur={2} far={4.5} />
      <OrbitControls enablePan={false} enableZoom={false} minPolarAngle={Math.PI / 2.2} maxPolarAngle={Math.PI / 2.2} />
    </Canvas>
  )
}
